# Default values for foobar.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

imagePullPolicy: Always
nodeSelector: {}

ingress:
  enabled: false
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: multi-juicer.local
      paths:
        - "/"
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

service:
  type: ClusterIP
  port: 3000

balancer:
  cookie:
    # SET THIS TO TRUE IF IN PRODUCTION
    # Sets secure Flag in cookie
    # balancer.cookie.secure -- Sets the secure attribute on cookie so that it only be send over https
    secure: true
    # balancer.cookie.name -- Changes the cookies name used to identify teams. Note will automatically be prefixed with "__Secure-" when balancer.cookie.secure is set to `true`
    name: juicebalancer-dontdelete
  repository: iteratec/juice-balancer
  tag: latest
  replicas: 1
  service:
    # Kubernetes service type
    type: ClusterIP
    # internal cluster service IP
    clusterIP: null
    # IP address to assign to load balancer (if supported)
    loadBalancerIP: null
    # list of IP CIDRs allowed access to lb (if supported)
    loadBalancerSourceRanges: null
    # IP address to assign to load balancer (if supported)
    externalIPs: null
  resources:
    requests:
      memory: 256Mi
      cpu: 400m
    limits:
      memory: 256Mi
      cpu: 400m
  affinity: {}
  tolerations: []
  # If set to true this skips setting ownerReferences on the teams JuiceShop Deployment and Services
  # This lets MultiJuicer run in older kubernetes cluster which don't support the reference type or the app/v1 deployment type
  skipOwnerReference: false
  metrics:
    # enables prometheus metrics for the balancer
    # if set to true you should change the prometheus-scraper password
    enabled: true
    dashboards:
      # if true, creates a Grafana Dashboard Config Map. (also requires metrics.enabled to be true)
      # These will automatically be imported by Grafana when using the Grafana helm chart, see: https://github.com/helm/charts/tree/master/stable/grafana#sidecar-for-dashboards
      enabled: false
    serviceMonitor:
      # if true, creates a Prometheus Operator ServiceMonitor (also requires metrics.enabled to be true)
      # this will also deploy a servicemonitor which monitors metrics from the Juice Shop instances
      enabled: false
    basicAuth:
      username: prometheus-scraper
      password: CHANGEME

juiceShop:
  # juiceShop.maxInstances -- Specifies how many JuiceShop instances MultiJuicer should start at max. Set to -1 to remove the max Juice Shop instance cap
  maxInstances: -1
  # Juice Shop Image to use
  image: bkimminich/juice-shop
  tag: v10.3.1
  # juiceShop.ctfKey -- Change the key when hosting a CTF event. This key gets used to generate the challenge flags. See: https://pwning.owasp-juice.shop/part1/ctf.html#overriding-the-ctfkey
  ctfKey: "CHANGEME"
  resources:
    requests:
      memory: 200Mi
      cpu: 200m
    limits:
      memory: 200Mi
      cpu: 200m
  # Specify a custom Juice Shop config.yaml
  # juiceShop.config -- See the JuiceShop Config Docs for more detail: https://pwning.owasp-juice.shop/part1/customization.html#yaml-configuration-file
  # @default -- See values.yaml for full details
  config: |
    application:
      logo: JuiceShopCTF_Logo.png
      favicon: favicon_ctf.ico
      showChallengeHints: false
      showVersionNumber: false
      showHackingInstructor: true
      showGitHubLinks: false
      numberOfRandomFakeUsers: 5
    challenges:
      showHints: true
      safetyOverride: true 
    ctf:
       showFlagsInNotifications: true
  # juiceShop.nodeEnv -- Specify a custom NODE_ENV for JuiceShop. If value is changed to something other than 'multi-juicer' it's not possible to set a custom config via `juiceShop.config`.
  nodeEnv: "multi-juicer"

# Deletes unused JuiceShop instances after a configurable period of inactivity
progressWatchdog:
  repository: iteratec/juice-progress-watchdog
  tag: latest
  resources:
    requests:
      memory: 48Mi
      cpu: 20m
    limits:
      memory: 48Mi
      cpu: 20m

# Deletes unused JuiceShop instances after a configurable period of inactivity
juiceShopCleanup:
  repository: iteratec/juice-cleaner
  tag: latest
  enabled: true
  # juiceShopCleanup.gracePeriod -- Specifies when Juice Shop instances will be deleted when unused for that period.
  gracePeriod: 1d
  # juiceShopCleanup.cron -- Cron in which the clean up job is run. Defaults to once in an hour. Change this if your grace period if shorter than 1 hour
  cron: "0 * * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  resources:
    requests:
      memory: 256Mi
    limits:
      memory: 256Mi
  affinity: {}
  tolerations: []
